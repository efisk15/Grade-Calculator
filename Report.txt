Four hours tracked towards the final lab (2 pts each)
30 min planning 
1 hour of coding


Pros and cons of using classes (OOP) for this specific idea/problem 

Using classes enables us to separate different methods of calculating GPAs for both semester and cumulative assessments. 
It also allows us to organize the header files more clearly, keeping each part of the code visually appealing and easier to navigate.


Describe at least one data structure we have covered that would be useful 
and explain why.

I used a map to calculate how much the overall GPA is affected based on the letter grades achieved. 
Each letter grade is associated with a specific number of credits, allowing me to allocate points accordingly. 
The final GPA is calculated by dividing the total grade points by the total credits taken. Using a map is advantageous because itâ€™s
 easier to traverse and update compared to a vector, which makes my calculations more straightforward and efficient. 
 This approach helps streamline the GPA calculation process.








provides at a high level least two test cases/unit tests for the problem outlined above (2 pts each)

2 test cases: 

Test Case 1: Fully Graduated Student
Scenario: A fully graduated student with one major and one minor.
Input: The student has varying grades across multiple courses with different credit levels.
Expected Output: The GPA should be calculated accurately based on the grades and credit hours, reflecting the student's performance in both the major and minor.

Test Case 2: Sophomore Student with Multiple Minors
Scenario: A sophomore student pursuing one major and two minors.
Input: The student has similar grades across courses with varying credit levels and different grading weight methods.
Weighting methods could include:
Test-heavy assessments
Assignment-heavy evaluations
Participation-heavy contributions